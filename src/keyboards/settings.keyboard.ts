// src/keyboards/settings.keyboard.ts
// –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫

import { InlineKeyboard } from 'grammy';
import { CallbackAction } from '../types';
import { NOTIFICATION_TIME_OPTIONS, EMOJI } from '../config/constants.js';
import type { Chat, Group } from '../types';

export function createSettingsMainKeyboard(
    chat: Chat,
    group: Group
): InlineKeyboard {
    const keyboard = new InlineKeyboard();

    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥—Ä—É–ø–ø–µ
    keyboard.text(
        `${EMOJI.GROUP} –°–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É`,
        CallbackAction.CHANGE_GROUP
    );
    keyboard.row();

    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
    const notifyIcon = chat.isnotificationenabled ? 'üîî' : 'üîï';
    const notifyText = chat.isnotificationenabled
        ? '–û—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'
        : '–í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è';

    keyboard.text(
        `${notifyIcon} ${notifyText}`,
        CallbackAction.TOGGLE_NOTIFICATIONS
    );
    keyboard.row();

    // –í—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–µ—Å–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã)
    if (chat.isnotificationenabled) {
        keyboard.text(
            `${EMOJI.CLOCK} –ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è (${chat.notificationtime.slice(0, 5)})`,
            CallbackAction.CHANGE_NOTIFICATION_TIME
        );
        keyboard.row();

        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞ –∫–∞–∂–¥—ã–π —É—Ä–æ–∫
        const everyLessonIcon = chat.notifyoneverylesson ? '‚úÖ' : 'üì¨';
        const everyLessonText = chat.notifyoneverylesson
            ? '–¢–æ–ª—å–∫–æ —É—Ç—Ä–µ–Ω–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'
            : '–£–≤–µ–¥–æ–º–ª—è—Ç—å –æ –∫–∞–∂–¥–æ–º —É—Ä–æ–∫–µ';

        keyboard.text(
            `${everyLessonIcon} ${everyLessonText}`,
            CallbackAction.TOGGLE_EVERY_LESSON
        );
        keyboard.row();
    }

    // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    keyboard.text(`${EMOJI.BACK} –ó–∞–∫—Ä—ã—Ç—å`, CallbackAction.CANCEL_ACTION);

    return keyboard;
}

export function createChangeGroupConfirmKeyboard(): InlineKeyboard {
    const keyboard = new InlineKeyboard();

    keyboard.text(
        '‚úÖ –î–∞, —Å–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É',
        CallbackAction.CONFIRM_CHANGE_GROUP
    );
    keyboard.row();

    keyboard.text(
        `${EMOJI.BACK} –û—Ç–º–µ–Ω–∞`,
        CallbackAction.CANCEL_ACTION
    );

    return keyboard;
}

export function createNotificationTimeKeyboard(): InlineKeyboard {
    const keyboard = new InlineKeyboard();

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ 2 –≤ —Ä—è–¥
    for (let i = 0; i < NOTIFICATION_TIME_OPTIONS.length; i += 2) {
        const option1 = NOTIFICATION_TIME_OPTIONS[i];
        const option2 = NOTIFICATION_TIME_OPTIONS[i + 1];

        if (option1) {
            keyboard.text(
                option1.label,
                `${CallbackAction.SET_NOTIFICATION_TIME}:${option1.value}`
            );
        }

        if (option2) {
            keyboard.text(
                option2.label,
                `${CallbackAction.SET_NOTIFICATION_TIME}:${option2.value}`
            );
        }

        keyboard.row();
    }

    // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    keyboard.text(`${EMOJI.BACK} –ù–∞–∑–∞–¥`, CallbackAction.CANCEL_ACTION);

    return keyboard;
}